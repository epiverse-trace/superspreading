[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 superspreading authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/estimate_individual_level_transmission.html","id":"transmission-data","dir":"Articles","previous_headings":"","what":"Transmission data","title":"Estimate individual-level transmission","text":"best performing model, AIC BIC comparison, negative binomial. parameter negative binomial show overdispersion (size dispersion parameter \\(k\\), mu mean, \\(R\\)) transmission thus EVD transmission chain data shows superspreading events possible realisation EVD transmission dynamics. values match reported Althaus (2015) reproduce figure 1 paper display tail distribution superspreading events can possible. Figure 1: Number secondary cases empirical data (bar plot) density negative binomial maximum likelihood estimates fit empirical data (points line). plot reproduced Althaus (2015) figure 1. Next partitioned data index cases secondary cases following Kucharski et al. (2016). fit negative binomial model index non-index case tranmission events.","code":"# total number of cases (i.e. individuals in transmission chain) n <- 152  # number of secondary cases for all cases all_cases_transmission <- c(   1, 2, 2, 5, 14, 1, 4, 4, 1, 3, 3, 8, 2, 1, 1, 4, 9, 9, 1, 1, 17, 2, 1,   1, 1, 4, 3, 3, 4, 2, 5, 1, 2, 2, 1, 9, 1, 3, 1, 2, 1, 1, 2 )  # add zeros for each cases that did not cause a secondary case # (i.e. cases that did not transmit) all_cases <- c(   all_cases_transmission,   rep(0, n - length(all_cases_transmission)) ) # fit a standard set of offspring distribution models: # - Poisson # - Geometric # - Negative Binomial  # TODO: use {quickfit} for model comparison pois_fit <- fitdist(data = all_cases, distr = \"pois\") geom_fit <- fitdist(data = all_cases, distr = \"geom\") nbinom_fit <- fitdist(data = all_cases, distr = \"nbinom\") knitr::kable(   data.frame(     distribution = c(pois_fit$distname, geom_fit$distname, nbinom_fit$distname),     AIC = c(pois_fit$aic, geom_fit$aic, nbinom_fit$aic),     BIC = c(pois_fit$bic, geom_fit$bic, nbinom_fit$bic)   ) ) nbinom_fit$estimate #>      size        mu  #> 0.1814260 0.9537995 # tally cases tally <- table(all_cases)  # pad with zeros when number of cases not in tally num_cases <- rep(0, 21) names(num_cases) <- as.character(seq(0, 20, 1)) num_cases[names(tally)] <- tally  # convert cases to proportional of total cases to plot on the same scale as # the density prop_num_cases <- num_cases / sum(num_cases)  # create data frame with proportion of cases, density and number of secondary # cases nbinom_data <- data.frame(   x = seq(0, 20, 1),   prop_num_cases = prop_num_cases,   density = dnbinom(     x = seq(0, 20, 1),     size = nbinom_fit$estimate[[\"size\"]],     mu = nbinom_fit$estimate[[\"mu\"]]   ) ) # make plot ggplot(data = nbinom_data) +   geom_col(     mapping = aes(x = x, y = prop_num_cases),     fill = \"cyan3\",     colour = \"black\"   ) +   geom_point(     mapping = aes(x = x, y = density),     colour = \"coral\",     size = 2   ) +   geom_line(     mapping = aes(x = x, y = density),     colour = \"coral\"   ) +   scale_x_continuous(name = \"Number of secondary cases\") +   scale_y_continuous(name = \"Frequency\") +   theme_bw() index_case_transmission <- c(2, 17, 5, 1, 8, 2, 14) secondary_case_transmission <- c(   1, 2, 1, 4, 4, 1, 3, 3, 1, 1, 4, 9, 9, 1, 2, 1, 1, 1, 4, 3, 3, 4, 2,   5, 1, 2, 2, 1, 9, 1, 3, 1, 2, 1, 1, 2 )  # Format data into index and non-index cases  # total non-index cases n_non_index <- sum(c(index_case_transmission, secondary_case_transmission)) # transmission from all non-index cases non_index_cases <- c(   secondary_case_transmission,   rep(0, n_non_index - length(secondary_case_transmission)) ) # Estimate R and k for index and non-index cases param_index <- fitdist(   data = index_case_transmission,   distr = \"nbinom\" ) param_index #> Fitting of the distribution ' nbinom ' by maximum likelihood  #> Parameters: #>      estimate Std. Error #> size 1.596646   1.025029 #> mu   7.000771   2.320850 param_non_index <- fitdist(   data = non_index_cases,   distr = \"nbinom\" ) param_non_index #> Fitting of the distribution ' nbinom ' by maximum likelihood  #> Parameters: #>       estimate Std. Error #> size 0.1937490 0.05005421 #> mu   0.6619608 0.14197451"},{"path":"/articles/estimate_individual_level_transmission.html","id":"superspreading-using-alternative-distributions","dir":"Articles","previous_headings":"","what":"Superspreading using alternative distributions","title":"Estimate individual-level transmission","text":"Advanced options section vignette discusses alternative transmission models quantify overdispersion may considered advanced comparison example. Research subsequent Lloyd-Smith et al. (2005) shown contact data infectious disease outbreaks often shows signatures overdispersion can therefore cause superspreading events. However, overdispersion can modelled distributions negative binomial. Kremer et al. (2021) showed SARS-CoV-2 superspreading may better modelled Poisson mixture distribution (Poisson compound distribution). Four Poisson mixture distribution applied: Poisson-Gamma, Poisson-Lognormal, Poisson-Weibull, Poisson-Generalised-Gamma; finding Poisson-lognormal Poisson-Weibull fit best three data sets. Poisson-Gamma distribution negative binomial distribution. Hereafter refer negative binomial. R density functions cumulative distribution functions poisson (dpois() ppois()), geometric (dgeom() pgeom()) negative binomial (dnbinom() pnbinom()) distributions, supply Poisson compound distributions. {superspreading} R package supply density cumulative distribution functions Poisson-lognormal (dpoislnorm() ppoislnorm()) Poisson-Weibull (dpoisweibull() ppoisweibull()). functions can used {fitdistrplus}, shown distributions . negative binomial still best performing fitting model, even addition Poisson-lognormal Poisson-Weibull models. Although second best model, Poisson-Weibull, performs similarly well negative binomial (\\(\\Delta\\)AIC < 2 & \\(\\Delta\\)BIC < 2). plot density distribution given maximum likelihood estimates inspect differences two distributions. Figure 2: Number secondary cases empirical data (bar plot) density negative binomial (orange) poisson-Weibull (pink) maximum likelihood estimates fit empirical data (points line). fit model similar, expected close AIC BIC (models numbers free parameters). Poisson-Weibull compound distribution can adequately capture overdispersion EVD transmission data. noticable difference models fitting number cases caused single secondary cases. negative binomial matches empirical data, whereas Poisson-Weibull slightly overestimates number. Overall, {superspreading} {fitdistrplus} (another fitting package choice) can used estimate understand individual-level transmission dynamics tranmission chain data available.","code":"# fit an expanded set of offspring distribution models: # - Poisson # - Geometric # - Negative Binomial # - Poisson-lognormal compound # - Poisson-Weibull compound  # TODO: use {quickfit} for model comparison pois_fit <- fitdist(data = all_cases, distr = \"pois\") geom_fit <- fitdist(data = all_cases, distr = \"geom\") nbinom_fit <- fitdist(data = all_cases, distr = \"nbinom\") poislnorm_fit <- fitdist(   data = all_cases,   distr = \"poislnorm\",   start = list(meanlog = 1, sdlog = 1) ) poisweibull_fit <- fitdist(   data = all_cases,   distr = \"poisweibull\",   start = list(shape = 1, scale = 1) )  knitr::kable(   data.frame(     distribution = c(       pois_fit$distname,       geom_fit$distname,       nbinom_fit$distname,       poislnorm_fit$distname,       poisweibull_fit$distname     ),     AIC = c(       pois_fit$aic,       geom_fit$aic,       nbinom_fit$aic,       poislnorm_fit$aic,       poisweibull_fit$aic     ),     BIC = c(       pois_fit$bic,       geom_fit$bic,       nbinom_fit$bic,       poislnorm_fit$bic,       poisweibull_fit$bic     )   ) ) # create data frame with proportion of cases, density of each distribution dist_compare_data <- data.frame(   x = seq(0, 20, 1),   prop_num_cases = c(prop_num_cases, rep(0, 21)),   dens = c(     dnbinom(       x = seq(0, 20, 1),       size = nbinom_fit$estimate[[\"size\"]],       mu = nbinom_fit$estimate[[\"mu\"]]     ),     poisweibull_density = dpoisweibull(       x = seq(0, 20, 1),       shape = poisweibull_fit$estimate[[\"shape\"]],       scale = poisweibull_fit$estimate[[\"scale\"]]     )   ),   dist = c(rep(\"Negative Binomial\", 21), rep(\"Poisson-Weibull\", 21)) ) # make plot ggplot(data = dist_compare_data) +   geom_col(     mapping = aes(x = x, y = prop_num_cases),     fill = \"cyan3\",     colour = \"black\"   ) +   geom_point(     mapping = aes(       x = x,       y = dens,       colour = dist     ),     size = 2   ) +   geom_line(mapping = aes(x = x, y = dens, colour = dist)) +   scale_x_continuous(name = \"Number of secondary cases\") +   scale_y_continuous(name = \"Frequency\") +   scale_colour_manual(     name = \"Distribution\",     values = c(\"coral\", \"deeppink\")   ) +   theme_bw() +   theme(legend.position = \"top\")"},{"path":"/articles/superspreading.html","id":"probability-of-epidemic","dir":"Articles","previous_headings":"","what":"Probability of epidemic","title":"Getting started with {superspreading}","text":"probability novel disease cause epidemic (.e. sustained transmission population) determined nature diseases’ transmission heterogeneity. variability may intrinsic property disease, product human behaviour social mixing patterns. given value \\(R\\) (\\(R_0\\)), number secondary cases caused primary case, variability high, probability outbreak cause epidemic lower superspreading events rare. Whereas lower variability probability higher individuals closer mean (\\(R\\)). probability_epidemic() function {superspreading} can calculate probability. k dispersion parameter negative binomial distribution controls variability individual-level transmission. code, k values one represent low heterogeneity (case k → \\(\\infty\\) poisson distribution), k decreases, heterogeneity increases. k equals 1, distribution geometric. Values k less one indicate overdispersion disease tranmsission, signature superspreading. value \\(R\\) increases, causes probability epidemic increase, k remains . value \\(R\\) less equal one zero probability causing sustained epidemic. Finally, probability new infection cause large epidemic influenced number initial infections seeding outbreak. define number initial infections.","code":"probability_epidemic(R = 1.5, k = 1, a = 1) #> [1] 0.333 probability_epidemic(R = 1.5, k = 0.5, a = 1) #> [1] 0.232 probability_epidemic(R = 1.5, k = 0.1, a = 1) #> [1] 0.068 probability_epidemic(R = 0.5, k = 1, a = 1) #> [1] 0 probability_epidemic(R = 1.0, k = 1, a = 1) #> [1] 0 probability_epidemic(R = 1.5, k = 1, a = 1) #> [1] 0.333 probability_epidemic(R = 5, k = 1, a = 1) #> [1] 0.8 probability_epidemic(R = 1.5, k = 1, a = 1) #> [1] 0.333 probability_epidemic(R = 1.5, k = 1, a = 10) #> [1] 0.9825716 probability_epidemic(R = 1.5, k = 1, a = 100) #> [1] 1"},{"path":"/articles/superspreading.html","id":"empirical-superspreading","dir":"Articles","previous_headings":"","what":"Empirical superspreading","title":"Getting started with {superspreading}","text":"Given probability_epidemic() possible determine probability epidemic diseases parameters offspring distribution estimated. offspring distribution simply distribution number secondary infections caused primary infection. distribution \\(R\\), mean distribution given \\(R\\). can use {epiparameter} load offspring distributions multiple diseases evaluate likely cause epidemics. parameters distribution can extracted: example assume initial pool infectors one (= 1) can easily adjusted case evidence larger initial seeding infections, whether animal--human spillover imported cases outside area interest. can see probability epidemic given estimates Lloyd-Smith et al. (2005) greater SARS Ebola. due offspring distribution Ebola poisson distributed smaller mean (mean \\(R\\) = 1.5), compared SARS, negative binomially distributed relatively small dispersion (k = 0.16).","code":"sars <- epidist_db(   disease = \"SARS\",   epi_dist = \"offspring_distribution\" ) #> Using Lloyd-Smith et al. (2005) <10.1038/nature04153> PMID: 16292310.  #> To retrieve the short citation use the 'get_citation' function evd <- epidist_db(   disease = \"Ebola Virus Disease\",   epi_dist = \"offspring_distribution\" ) #> Using Lloyd-Smith et al. (2005) <10.1038/nature04153> PMID: 16292310.  #> To retrieve the short citation use the 'get_citation' function sars_params <- parameters(sars) sars_params #>       mean dispersion  #>       1.63       0.16 evd_params <- parameters(evd) evd_params #> mean  #>  1.5 family(sars) #> [1] \"nbinom\" probability_epidemic(   R = sars_params[[\"mean\"]],   k = sars_params[[\"dispersion\"]],   a = 1 ) #> [1] 0.12 family(evd) #> [1] \"pois\" # k is set to infinite as the distribution for EVD is poisson probability_epidemic(R = evd_params[[\"mean\"]], k = Inf, a = 1) #> [1] 0.583"},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joshua W. Lambert. Author, maintainer, copyright holder. Adam Kucharski. Author, copyright holder. Sebastian Funk. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lambert J, Kucharski (2023). superspreading: Estimate individual level variation transmission. R package version 0.0.0.9000.","code":"@Manual{,   title = {superspreading: Estimate individual level variation in transmission},   author = {Joshua W. Lambert and Adam Kucharski},   year = {2023},   note = {R package version 0.0.0.9000}, }"},{"path":"/index.html","id":"superspreading-estimate-individual-level-variation-in-transmission-","dir":"","previous_headings":"","what":"Estimate individual level variation in transmission","title":"Estimate individual level variation in transmission","text":"{superspreading} R package provides set functions estimate understand individual-level variation transmission secondary cases. {superspreading} developed Centre Mathematical Modelling Infectious Diseases London School Hygiene Tropical Medicine part Epiverse-TRACE.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Estimate individual level variation in transmission","text":"easiest way install development version {superspreading} GitHub use pak package:","code":"# check whether {pak} is installed if(!require(\"pak\")) install.packages(\"pak\") pak::pak(\"epiverse-trace/superspreading\")"},{"path":"/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick start","title":"Estimate individual level variation in transmission","text":"","code":"library(superspreading)"},{"path":"/index.html","id":"calculate-the-heterogeneity-of-transmission","dir":"","previous_headings":"Quick start","what":"Calculate the heterogeneity of transmission","title":"Estimate individual level variation in transmission","text":"Case study using data early Ebola outbreak Guinea 2014, stratified index non-index cases, Kucharski et al. (2016). Data transmission index secondary cases Ebola 2014. Source: Faye et al. (2015) & Althaus (2015).","code":"# we use {fitdistrplus} to fit the models library(fitdistrplus) #> Loading required package: MASS #> Loading required package: survival  index_case_transmission <- c(2, 17, 5, 1, 8, 2, 14) secondary_case_transmission <- c(   1, 2, 1, 4, 4, 1, 3, 3, 1, 1, 4, 9, 9, 1, 2, 1, 1, 1, 4, 3, 3, 4, 2, 5,    1, 2, 2, 1, 9, 1, 3, 1, 2, 1, 1, 2 )   # Format data into index and non-index cases # total non-index cases n_non_index <- sum(c(index_case_transmission, secondary_case_transmission))  # transmission from all non-index cases non_index_cases <- c(   secondary_case_transmission,    rep(0, n_non_index - length(secondary_case_transmission)) )  # Estimate R and k for index and non-index cases param_index <- fitdist(data = index_case_transmission, distr = \"nbinom\")  param_index #> Fitting of the distribution ' nbinom ' by maximum likelihood  #> Parameters: #>      estimate Std. Error #> size 1.596646   1.025029 #> mu   7.000771   2.320850 param_non_index <- fitdist(data = non_index_cases, distr = \"nbinom\")  param_non_index #> Fitting of the distribution ' nbinom ' by maximum likelihood  #> Parameters: #>       estimate Std. Error #> size 0.1937490 0.05005421 #> mu   0.6619608 0.14197451"},{"path":"/index.html","id":"calculate-the-probability-of-large-epidemic","dir":"","previous_headings":"Quick start","what":"Calculate the probability of large epidemic","title":"Estimate individual level variation in transmission","text":"","code":"# Compare probability of a large outbreak when k varies according to  # index/non-index values, assuming R = 2 and 3 initial spillover infections  R <- 2 initial_infections <- 3  # Probability of epidemic using k estimate from index cases probability_epidemic(   R = R,    k = param_index$estimate[[\"size\"]],    a = initial_infections ) #> [1] 0.9280087  # Probability of epidemic using k estimate from non-index cases probability_epidemic(   R = R,    k = param_non_index$estimate[[\"size\"]],    a = initial_infections ) #> [1] 0.4665883"},{"path":"/index.html","id":"package-vignettes","dir":"","previous_headings":"","what":"Package vignettes","title":"Estimate individual level variation in transmission","text":"details use {superspreading} can found online documentation package vignettes, “Articles”.","code":""},{"path":"/index.html","id":"help","dir":"","previous_headings":"","what":"Help","title":"Estimate individual level variation in transmission","text":"report bug please open issue","code":""},{"path":"/index.html","id":"contribute","dir":"","previous_headings":"","what":"Contribute","title":"Estimate individual level variation in transmission","text":"Contributions {superspreading} welcomed. Please follow package contributing guide.","code":""},{"path":"/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Estimate individual level variation in transmission","text":"Please note {superspreading} project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"/index.html","id":"citing-this-package","dir":"","previous_headings":"","what":"Citing this package","title":"Estimate individual level variation in transmission","text":"","code":"citation(\"superspreading\") #> To cite package 'superspreading' in publications use: #>  #>   Lambert J, Kucharski A (2023). _superspreading: Estimate individual #>   level variation in transmission_. R package version 0.0.0.9000. #>  #> A BibTeX entry for LaTeX users is #>  #>   @Manual{, #>     title = {superspreading: Estimate individual level variation in transmission}, #>     author = {Joshua W. Lambert and Adam Kucharski}, #>     year = {2023}, #>     note = {R package version 0.0.0.9000}, #>   }"},{"path":"/index.html","id":"related-projects","dir":"","previous_headings":"","what":"Related projects","title":"Estimate individual level variation in transmission","text":"project overlap R packages: {bpmodels} another Epiverse-TRACE R package analyses transmission chain data infer transmission process either size length transmission chains. Two main differences packages : 1) {superspreading} functions compute metrics characterise outbreaks superspreading events (e.g. probability_epidemic() & probability_extinct()); 2) {bpmodels} can simulate branching process (chain_sim()) specified process (e.g. negative binomial).","code":""},{"path":[]},{"path":"/reference/dpoislnorm.html","id":null,"dir":"Reference","previous_headings":"","what":"Density of the poisson-lognormal compound distribution — dpoislnorm","title":"Density of the poisson-lognormal compound distribution — dpoislnorm","text":"Density poisson-lognormal compound distribution","code":""},{"path":"/reference/dpoislnorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density of the poisson-lognormal compound distribution — dpoislnorm","text":"","code":"dpoislnorm(x, meanlog, sdlog)"},{"path":"/reference/dpoislnorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density of the poisson-lognormal compound distribution — dpoislnorm","text":"x number quantile distribution meanlog number mean distribution log scale sdlog number standard deviation distribution log scale","code":""},{"path":"/reference/dpoislnorm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Density of the poisson-lognormal compound distribution — dpoislnorm","text":"numeric vector density poisson-lognormal distribution.","code":""},{"path":"/reference/dpoislnorm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Density of the poisson-lognormal compound distribution — dpoislnorm","text":"function vectorised vector quantiles can input output equal length.","code":""},{"path":"/reference/dpoislnorm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Density of the poisson-lognormal compound distribution — dpoislnorm","text":"","code":"dpoislnorm(x = 10, meanlog = 1, sdlog = 2) #> [1] 0.01626334 dpoislnorm(x = 1:10, meanlog = 1, sdlog = 2) #>  [1] 0.14112152 0.08990619 0.06345106 0.04780697 0.03765325 0.03061694 #>  [7] 0.02550065 0.02164138 0.01864488 0.01626334"},{"path":"/reference/dpoisweibull.html","id":null,"dir":"Reference","previous_headings":"","what":"Density of the poisson-Weibull compound distribution — dpoisweibull","title":"Density of the poisson-Weibull compound distribution — dpoisweibull","text":"Density poisson-Weibull compound distribution","code":""},{"path":"/reference/dpoisweibull.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Density of the poisson-Weibull compound distribution — dpoisweibull","text":"","code":"dpoisweibull(x, shape, scale)"},{"path":"/reference/dpoisweibull.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Density of the poisson-Weibull compound distribution — dpoisweibull","text":"x number quantile distribution shape number shape parameter distribution scale number scale parameter distribution","code":""},{"path":"/reference/dpoisweibull.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Density of the poisson-Weibull compound distribution — dpoisweibull","text":"numeric vector density poisson-Weibull distribution.","code":""},{"path":"/reference/dpoisweibull.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Density of the poisson-Weibull compound distribution — dpoisweibull","text":"function vectorised vector quantiles can input output equal length.","code":""},{"path":"/reference/dpoisweibull.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Density of the poisson-Weibull compound distribution — dpoisweibull","text":"","code":"dpoisweibull(x = 10, shape = 1, scale = 2) #> [1] 0.00578051 dpoisweibull(x = 1:10, shape = 1, scale = 2) #>  [1] 0.222222222 0.148148148 0.098765432 0.065843621 0.043895748 0.029263832 #>  [7] 0.019509221 0.013006147 0.008670765 0.005780510"},{"path":"/reference/ppoislnorm.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative distribution function of the poisson-lognormal compound\ndistribution — ppoislnorm","title":"Cumulative distribution function of the poisson-lognormal compound\ndistribution — ppoislnorm","text":"Cumulative distribution function poisson-lognormal compound distribution","code":""},{"path":"/reference/ppoislnorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative distribution function of the poisson-lognormal compound\ndistribution — ppoislnorm","text":"","code":"ppoislnorm(q, meanlog, sdlog)"},{"path":"/reference/ppoislnorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cumulative distribution function of the poisson-lognormal compound\ndistribution — ppoislnorm","text":"q number quantile distribution meanlog number mean distribution log scale sdlog number standard deviation distribution log scale","code":""},{"path":"/reference/ppoislnorm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cumulative distribution function of the poisson-lognormal compound\ndistribution — ppoislnorm","text":"numeric vector distribution function.","code":""},{"path":"/reference/ppoislnorm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cumulative distribution function of the poisson-lognormal compound\ndistribution — ppoislnorm","text":"function vectorised vector quantiles can input output equal length.","code":""},{"path":"/reference/ppoislnorm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cumulative distribution function of the poisson-lognormal compound\ndistribution — ppoislnorm","text":"","code":"ppoislnorm(q = 10, meanlog = 1, sdlog = 2) #> [1] 0.74796 ppoislnorm(q = 1:10, meanlog = 1, sdlog = 2) #>  [1] 0.3964753 0.4863815 0.5498326 0.5976395 0.6352928 0.6659097 0.6914104 #>  [8] 0.7130517 0.7316966 0.7479600"},{"path":"/reference/ppoisweibull.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative distribution function of the poisson-Weibull compound\ndistribution — ppoisweibull","title":"Cumulative distribution function of the poisson-Weibull compound\ndistribution — ppoisweibull","text":"Cumulative distribution function poisson-Weibull compound distribution","code":""},{"path":"/reference/ppoisweibull.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative distribution function of the poisson-Weibull compound\ndistribution — ppoisweibull","text":"","code":"ppoisweibull(q, shape, scale)"},{"path":"/reference/ppoisweibull.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cumulative distribution function of the poisson-Weibull compound\ndistribution — ppoisweibull","text":"q number quantile distribution shape number shape parameter distribution scale number scale parameter distribution","code":""},{"path":"/reference/ppoisweibull.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cumulative distribution function of the poisson-Weibull compound\ndistribution — ppoisweibull","text":"numeric vector distribution function.","code":""},{"path":"/reference/ppoisweibull.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cumulative distribution function of the poisson-Weibull compound\ndistribution — ppoisweibull","text":"function vectorised vector quantiles can input output equal length.","code":""},{"path":"/reference/ppoisweibull.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cumulative distribution function of the poisson-Weibull compound\ndistribution — ppoisweibull","text":"","code":"ppoisweibull(q = 10, shape = 1, scale = 2) #> [1] 0.988439 ppoisweibull(q = 1:10, shape = 1, scale = 2) #>  [1] 0.5555556 0.7037037 0.8024691 0.8683128 0.9122085 0.9414723 0.9609816 #>  [8] 0.9739877 0.9826585 0.9884390"},{"path":"/reference/probability_epidemic.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the probability a disease will cause an outbreak based on R, k\nand initial cases — probability_epidemic","title":"Calculate the probability a disease will cause an outbreak based on R, k\nand initial cases — probability_epidemic","text":"Calculates probability branching process cause epidemic (.e. probability fail go extinct) based R, k initial cases","code":""},{"path":"/reference/probability_epidemic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the probability a disease will cause an outbreak based on R, k\nand initial cases — probability_epidemic","text":"","code":"probability_epidemic(R, k, a)"},{"path":"/reference/probability_epidemic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the probability a disease will cause an outbreak based on R, k\nand initial cases — probability_epidemic","text":"R number specifying R parameter (.e. average secondary cases per infectious individual) k number specifying  k parameter (.e. overdispersion offspring distribution fitted negative binomial) count specifying number initial infections","code":""},{"path":"/reference/probability_epidemic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the probability a disease will cause an outbreak based on R, k\nand initial cases — probability_epidemic","text":"value probability large epidemic","code":""},{"path":"/reference/probability_epidemic.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate the probability a disease will cause an outbreak based on R, k\nand initial cases — probability_epidemic","text":"Kucharski, . J., Russell, T. W., Diamond, C., Liu, Y., Edmunds, J., Funk, S. & Eggo, R. M. (2020). Early dynamics transmission control COVID-19: mathematical modelling study. Lancet Infectious Diseases, 20(5), 553-558. https://doi.org/10.1016/S1473-3099(20)30144-4","code":""},{"path":[]},{"path":"/reference/probability_epidemic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the probability a disease will cause an outbreak based on R, k\nand initial cases — probability_epidemic","text":"","code":"probability_epidemic(R = 1.5, k = 0.1, a = 10) #> [1] 0.5055082"},{"path":"/reference/probability_extinct.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the probability a branching process will go extinct based on\nR, k and initial cases — probability_extinct","title":"Calculates the probability a branching process will go extinct based on\nR, k and initial cases — probability_extinct","text":"Calculates probability branching process causes epidemic go extinct. complement probability disease causing epidemic (probability_epidemic()).","code":""},{"path":"/reference/probability_extinct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the probability a branching process will go extinct based on\nR, k and initial cases — probability_extinct","text":"","code":"probability_extinct(R, k, a)"},{"path":"/reference/probability_extinct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the probability a branching process will go extinct based on\nR, k and initial cases — probability_extinct","text":"R number specifying R parameter (.e. average secondary cases per infectious individual) k number specifying  k parameter (.e. overdispersion offspring distribution fitted negative binomial) count specifying number initial infections","code":""},{"path":"/reference/probability_extinct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the probability a branching process will go extinct based on\nR, k and initial cases — probability_extinct","text":"value probability going extinct","code":""},{"path":"/reference/probability_extinct.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculates the probability a branching process will go extinct based on\nR, k and initial cases — probability_extinct","text":"Lloyd-Smith, J. O., Schreiber, S. J., Kopp, P. E., & Getz, W. M. (2005). Superspreading effect individual variation disease emergence. Nature, 438(7066), 355-359. https://doi.org/10.1038/nature04153","code":""},{"path":[]},{"path":"/reference/probability_extinct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the probability a branching process will go extinct based on\nR, k and initial cases — probability_extinct","text":"","code":"probability_extinct(R = 1.5, k = 0.1, a = 10) #> [1] 0.4944918"},{"path":"/reference/proportion_cluster_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Proportion of new cases that originated with a transmission event of a\ngiven size (useful to inform backwards contact tracing efforts, i.e. how\nmany cases are associated with large clusters). — proportion_cluster_size","title":"Proportion of new cases that originated with a transmission event of a\ngiven size (useful to inform backwards contact tracing efforts, i.e. how\nmany cases are associated with large clusters). — proportion_cluster_size","text":"Calculates proportion new cases originated transmission event given size (useful inform backwards contact tracing efforts, .e. many cases associated large clusters). define cluster transmission primary case least one secondary case.","code":""},{"path":"/reference/proportion_cluster_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Proportion of new cases that originated with a transmission event of a\ngiven size (useful to inform backwards contact tracing efforts, i.e. how\nmany cases are associated with large clusters). — proportion_cluster_size","text":"","code":"proportion_cluster_size(R, k, cluster_size)"},{"path":"/reference/proportion_cluster_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Proportion of new cases that originated with a transmission event of a\ngiven size (useful to inform backwards contact tracing efforts, i.e. how\nmany cases are associated with large clusters). — proportion_cluster_size","text":"R number specifying R parameter (.e. average secondary cases per infectious individual) k number specifying  k parameter (.e. overdispersion offspring distribution fitted negative binomial) cluster_size number cluster size threshold","code":""},{"path":"/reference/proportion_cluster_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Proportion of new cases that originated with a transmission event of a\ngiven size (useful to inform backwards contact tracing efforts, i.e. how\nmany cases are associated with large clusters). — proportion_cluster_size","text":"data frame value proportion new cases part transmission event threshold given value R k","code":""},{"path":"/reference/proportion_cluster_size.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Proportion of new cases that originated with a transmission event of a\ngiven size (useful to inform backwards contact tracing efforts, i.e. how\nmany cases are associated with large clusters). — proportion_cluster_size","text":"function calculates proportion secondary cases caused transmission events certain size. calculate proportion transmission events cause cluster secondary cases certain size. words number cases threshold divided total number cases, number transmission events certain threshold divided number transmission events","code":""},{"path":"/reference/proportion_cluster_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Proportion of new cases that originated with a transmission event of a\ngiven size (useful to inform backwards contact tracing efforts, i.e. how\nmany cases are associated with large clusters). — proportion_cluster_size","text":"","code":"R <- 2 k <- 0.1 cluster_size <- 10 proportion_cluster_size(R = R, k = k, cluster_size = cluster_size) #>   R   k prop_10 #> 1 2 0.1   68.9%  # example with a vector of k k <- c(0.1, 0.2, 0.3, 0.4, 0.5) proportion_cluster_size(R = R, k = k, cluster_size = cluster_size) #>   R   k prop_10 #> 1 2 0.1   68.5% #> 2 2 0.2   51.8% #> 3 2 0.3   39.5% #> 4 2 0.4   31.3% #> 5 2 0.5     25%  # example with a vector of cluster sizes cluster_size <- c(5, 10, 25) proportion_cluster_size(R = R, k = k, cluster_size = cluster_size) #>   R   k prop_5 prop_10 prop_25 #> 1 2 0.1  85.9%     69%   34.8% #> 2 2 0.2  76.2%   50.7%   13.3% #> 3 2 0.3  69.1%   38.8%      6% #> 4 2 0.4  63.8%     31%    2.6% #> 5 2 0.5  59.7%   25.4%    1.3%"},{"path":"/reference/proportion_transmission.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate what proportion of cases that cause a certain proportion of\ntransmission — proportion_transmission","title":"Estimate what proportion of cases that cause a certain proportion of\ntransmission — proportion_transmission","text":"Calculates proportion cases cause certain percentage transmission. commonly estimated proportion cases cause 80% transmission (.e. secondary cases). can calculated using proportion_transmission() varying values \\(R\\) different values percentage transmission.","code":""},{"path":"/reference/proportion_transmission.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate what proportion of cases that cause a certain proportion of\ntransmission — proportion_transmission","text":"","code":"proportion_transmission(R, k, percent_transmission, sim = FALSE)"},{"path":"/reference/proportion_transmission.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate what proportion of cases that cause a certain proportion of\ntransmission — proportion_transmission","text":"R number specifying R parameter (.e. average secondary cases per infectious individual) k number specifying  k parameter (.e. overdispersion offspring distribution fitted negative binomial) percent_transmission number percentage transmission proportion cases produced sim logical whether calculation done numerically (.e. simulate secondary contacts) analytically","code":""},{"path":"/reference/proportion_transmission.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate what proportion of cases that cause a certain proportion of\ntransmission — proportion_transmission","text":"data frame value proportion cases given value R k","code":""},{"path":"/reference/proportion_transmission.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate what proportion of cases that cause a certain proportion of\ntransmission — proportion_transmission","text":"Multiple values R k can supplied data frame every combination returned. numerical calculation uses random number generation simulate secondary contacts answers may minimally vary calls. number simulation replicates fixed 1e5.","code":""},{"path":"/reference/proportion_transmission.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimate what proportion of cases that cause a certain proportion of\ntransmission — proportion_transmission","text":"analytical calculation : Endo, ., Abbott, S., Kucharski, . J., & Funk, S. (2020) Estimating overdispersion COVID-19 transmission using outbreak sizes outside China. Wellcome Open Research, 5. <doi.org/10.12688/wellcomeopenres.15842.3>","code":""},{"path":"/reference/proportion_transmission.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate what proportion of cases that cause a certain proportion of\ntransmission — proportion_transmission","text":"","code":"# example of single values of R and k percent_transmission <- 0.8 # 80% of transmission R <- 2 k <- 0.5 proportion_transmission(   R = R,   k = k,   percent_transmission = percent_transmission ) #>   R   k prop_80 #> 1 2 0.5   26.4%  # example with multiple values of k k <- c(0.1, 0.2, 0.3, 0.4, 0.5, 1) proportion_transmission(   R = R,   k = k,   percent_transmission = percent_transmission ) #>   R   k prop_80 #> 1 2 0.1    9.2% #> 2 2 0.2   15.6% #> 3 2 0.3   20.3% #> 4 2 0.4   23.8% #> 5 2 0.5   26.4% #> 6 2 1.0   35.6%  # example with vectors of R and k R <- c(1, 2, 3) proportion_transmission(   R = R,   k = k,   percent_transmission = percent_transmission ) #>    R   k prop_80 #> 1  1 0.1    8.7% #> 2  2 0.1    9.2% #> 3  3 0.1    9.4% #> 4  1 0.2   14.3% #> 5  2 0.2   15.6% #> 6  3 0.2     16% #> 7  1 0.3   18.2% #> 8  2 0.3   20.3% #> 9  3 0.3     21% #> 10 1 0.4   20.8% #> 11 2 0.4   23.8% #> 12 3 0.4     25% #> 13 1 0.5   22.6% #> 14 2 0.5   26.4% #> 15 3 0.5     28% #> 16 1 1.0     30% #> 17 2 1.0   35.6% #> 18 3 1.0   37.8%"}]
